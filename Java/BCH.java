public class BCH extends javax.swing.JFrame {

    int[] d = new int[10];
    String number = "";
    
    
    //modulus 11 for all integer that is passed in
    public static int mod11(int x){        
        x %= 11;
        
        if (x < 0) x += 11;
        return x;
    }
    
    //Inverse function with modulus 11
    public int inverse(int a, int n){
        int t = 0;
        int newt = 1;
        int r = n;
        int newr = a;
        int q, temp;
        
        while (newr != 0){
            q = r/newr;
            temp = newt;
            newt = t - q*newt;
            t = temp;
            temp = newr;
            newr = r - q*newr;
            r = temp;
        }
        
        if (r > 1) return -1;
        if (t < 0) t += n;
        return t;
    }
    
    //square root function
    public int sqrt(int n, int mod) throws ArithmeticException{
        for(int i=0 ; i<11 ; i++){
            if(((i*i)%11)== n) return i;
        }
        throw new ArithmeticException("No square root found.");
    }
    
    //Validate Input
    public static boolean strCheck(String s,int len) {
        if (s.isEmpty()) return false;
        else if (s.length()!= len) return false;
        
        //Check if string is digit
        for (int i = 0; i < s.length(); i++) {
            if (!Character.isDigit(s.charAt(i))) {
                return false;
            }
        }
        return true;
    }    
    
    public BCH() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Text1 = new javax.swing.JTextField();
        Button1 = new javax.swing.JButton();
        Text2 = new javax.swing.JTextField();
        Button2 = new javax.swing.JButton();
        AnswerSheet = new javax.swing.JTextField();
        AnswerSheet2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BCH Generator & Corrector");
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(540, 200));

        Text1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Text1.setText("Enter 6 digits");
        Text1.setBorder(null);
        Text1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text1ActionPerformed(evt);
            }
        });

        Button1.setText("Encode");
        Button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Button1MouseClicked(evt);
            }
        });

        Text2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Text2.setText("Enter 10 digits");
        Text2.setBorder(null);
        Text2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text2ActionPerformed(evt);
            }
        });

        Button2.setText("Decode");
        Button2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Button2MouseClicked(evt);
            }
        });
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        AnswerSheet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AnswerSheet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AnswerSheet.setBorder(null);
        AnswerSheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerSheetActionPerformed(evt);
            }
        });

        AnswerSheet2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AnswerSheet2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AnswerSheet2.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addComponent(AnswerSheet2)
                    .addComponent(AnswerSheet))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AnswerSheet, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AnswerSheet2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Text1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Text1ActionPerformed

    //BCH (10,6) Generator
    private void Button1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Button1MouseClicked
        // TODO add your handling code here:  
        //Get first 6 digits & validate
        if (!strCheck(Text1.getText(), 6)) {
            AnswerSheet.setText("Invalid Input");
            
        } else {
            //Convert input into individual integers
            int num = Integer.parseInt(Text1.getText());
            for (int i = 6; i > 0; i--) {
                d[i - 1] = num % 10;
                num /= 10;
            }

            //Generate last 4 digits
            d[6] = (4 * d[0] + 10 * d[1] + 9 * d[2] + 2 * d[3] + d[4] + 7 * d[5]) % 11;
            d[7] = (7 * d[0] + 8 * d[1] + 7 * d[2] + d[3] + 9 * d[4] + 6 * d[5]) % 11;
            d[8] = (9 * d[0] + d[1] + 7 * d[2] + 8 * d[3] + 7 * d[4] + 7 * d[5]) % 11;
            d[9] = (d[0] + 2 * d[1] + 9 * d[2] + 10 * d[3] + 4 * d[4] + d[5]) % 11;

            //Check for 10's else print results
            if (d[6] == 10 || d[7] == 10 || d[8] == 10 || d[9] == 10) {
                AnswerSheet.setText("Unusable Number");
            } else {
                //Convert array to string for printing
                for (int i = 0; i < 10; i++) {
                    number += Integer.toString(d[i]);
                }
                AnswerSheet.setText(number);
            }
        }
    }//GEN-LAST:event_Button1MouseClicked

    
    //BCH(10,6) Decoder
    private void Button2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Button2MouseClicked
        
        //Get 10 input numbers & validate    
        if (!strCheck(Text2.getText(), 10)) {
            AnswerSheet.setText("Invalid Input");
            
        } else {
            // Convert input into long variable
            long num10 = Long.parseLong(Text2.getText());
            for (int i = 10; i > 0; i--) {
                d[i - 1] = (int) (num10 % 10);
                num10 /= 10;
            }

            int[] synd = new int[4];
            int P, Q, R;
            int i, j, a, b;

            //Generate Syndromes
            synd[0] = mod11((d[0] + d[1] + d[2] + d[3] + d[4] + d[5] + d[6] + d[7] + d[8] + d[9]));
            synd[1] = mod11((d[0] + 2 * d[1] + 3 * d[2] + 4 * d[3] + 5 * d[4] + 6 * d[5] + 7 * d[6] + 8 * d[7] + 9 * d[8] + 10 * d[9]));
            synd[2] = mod11((d[0] + 4 * d[1] + 9 * d[2] + 5 * d[3] + 3 * d[4] + 3 * d[5] + 5 * d[6] + 9 * d[7] + 4 * d[8] + d[9]));
            synd[3] = mod11((d[0] + 8 * d[1] + 5 * d[2] + 9 * d[3] + 4 * d[4] + 7 * d[5] + 2 * d[6] + 6 * d[7] + 3 * d[8] + 10 * d[9]));

            //Check if all syndromes are 0
            if (synd[0] == 0 && synd[1] == 0 && synd[2] == 0 && synd[3] == 0) {
                AnswerSheet2.setText("No errors in code.");
            } else {
            //Check for amount of error
                //Generate PQR
                String correctAns = "";
                P = mod11((synd[1] * synd[1]) - (synd[0] * synd[2]));
                Q = mod11((synd[0] * synd[3]) - (synd[1] * synd[2]));
                R = mod11((synd[2] * synd[2]) - (synd[1] * synd[3]));

                //Check PQR if 0
                if (P == 0 && Q == 0 && R == 0) {
                    int mag = synd[0];
                    int pos = mod11(synd[1] * (inverse(synd[0], 11)));

                    try {
                        if (pos <= 0) {
                            throw new ArithmeticException();
                        }

                        //Fix single error
                        d[pos - 1] = mod11(d[pos - 1] - mag);

                        if (d[pos - 1] > 9) {
                            throw new ArithmeticException();
                        }

                        //Convert array into String
                        for (int x = 0; x < 10; x++) {
                            correctAns += d[x];
                        }

                        AnswerSheet2.setText("Single Error. The correct code is" + correctAns);
                    } catch (ArithmeticException e) {
                        AnswerSheet2.setText("More than 2 Errors. Unable to fix code.");
                    }
                } else {
                    //Check for double error or more
                    try {
                        int root = sqrt((mod11(Q * Q - (4 * P * R))), 11);

                        i = mod11(-Q + root);
                        j = mod11(-Q - root);
                        int k = inverse(mod11(2 * P), 11);

                        //Get position of error 
                        i = mod11(i * k);
                        j = mod11(j * k);

                        //Get magnitude of error
                        b = mod11((i * synd[0] - synd[1]) * inverse(mod11(i - j), 11));
                        a = mod11(synd[0] - b);

                        if ((i <= 0) || (j <= 0)) {
                            throw new ArithmeticException();
                        }

                        //Correct errors
                        d[i - 1] = mod11(d[i - 1] - a);
                        d[j - 1] = mod11(d[j - 1] - b);

                        if ((d[i - 1] > 9) || (d[j - 1] > 9)) {
                            throw new ArithmeticException();
                        }

                        //Convert array into String
                        for (int x = 0; x < 10; x++) {
                            correctAns += d[x];
                        }
                        AnswerSheet2.setText("Double Error. Correct BCH code: " + correctAns);
                    } catch (ArithmeticException e) {
                        System.out.println(e);
                        AnswerSheet2.setText("More than 2 Errors. Unable to fix code.");
                    }

                }
            }
        }
    }//GEN-LAST:event_Button2MouseClicked

    private void AnswerSheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnswerSheetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnswerSheetActionPerformed

    private void Text2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Text2ActionPerformed

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Button2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BCH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BCH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BCH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BCH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BCH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AnswerSheet;
    private javax.swing.JTextField AnswerSheet2;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JTextField Text1;
    private javax.swing.JTextField Text2;
    // End of variables declaration//GEN-END:variables
}
