
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Seal
 */
public class BruteForce_A extends javax.swing.JFrame {

    /**
     * Creates new form BruteForce_A
     */
    public BruteForce_A() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button = new javax.swing.JButton();
        inputBox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        answerArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Digit Password Cracker");
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(500, 250));

        button.setFont(new java.awt.Font("New Athletic M54", 0, 18)); // NOI18N
        button.setText("Find The Password");
        button.setBorder(null);
        button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonMouseClicked(evt);
            }
        });
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        inputBox.setFont(new java.awt.Font("Myanmar Text", 0, 18)); // NOI18N
        inputBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputBox.setText("Hash Code Here");
        inputBox.setBorder(null);

        answerArea.setColumns(20);
        answerArea.setRows(5);
        jScrollPane1.setViewportView(answerArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(inputBox, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(inputBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonActionPerformed

    private void buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMouseClicked

        timeStart();
        //Get hashed password input & validate
        if (!strCheck(inputBox.getText())) {
            answerArea.setText("Invalid input.");
            
        } else {
            
            try {
                //Call generatePW function to generate password
                generatePW(inputBox.getText());
                timeStop("showMin");
            } catch (NoSuchAlgorithmException e) {
                answerArea.setText("An error has occured");
            }
            
        }
    }

    //Check if string is alphanumeric
    public static boolean strCheck(String s) {
        if (s.isEmpty()) {
            return false;
        }
        else if (s.length() != 40){
            return false;
        }
        for (int i = 0; i < s.length(); i++) {
            if (!Character.isLetterOrDigit(s.charAt(i))) {
                return false;
            }
        }
        return true;
    }

    //Generate numeric password for brute force
    public static void generatePW(String target) throws NoSuchAlgorithmException {
        boolean search = false;
        StringBuilder test;

        //loop through from length 1-10
        for (int length = 1; length <= 10 && !search; length++) {
            int i = 0;
            test = new StringBuilder(Integer.toString(i));
            
            while (test.length() <= length && !search) {
                
                // Add 0's in front of string
                while (test.length() < length && !search) {
                    test.insert(0, "0");
                }
                
                //Convert to hash and compare
                search = compare(target, SHA1(test.toString()));

                //if password is found
                if (search) {
                    answerArea.setText("Found it! " + test.toString() + " is the password.");
                }

                i++;
                test = new StringBuilder(Integer.toString(i));
            }
        }

        //If no passwords were found
        if (!search) {
            answerArea.setText("No such password.");
        }
    }

    //Converts passwords to hash SHA1 format
    public static String SHA1(String input) throws NoSuchAlgorithmException {
        //Initialize messageDigest and set algorithm
        MessageDigest md = MessageDigest.getInstance("SHA-1");
        byte[] inputInBytes = md.digest(input.getBytes());

        //Convert byte array to hash
        String result = "";
        for (int i = 0; i < inputInBytes.length; i++) {
            result += Integer.toString((inputInBytes[i] & 0xff) + 0x100, 16).substring(1);
        }
        return result;
    }
    
    // a variable to remember the start time,  use the following methods 
    long timer = 0;

    void timeStart() {
        timer = System.currentTimeMillis();
    }

    void timeStop(String s) {
        timer = System.currentTimeMillis() - timer;
        if (s.equals("showMs") || s.equals("")) {
            answerArea.append("\nTime taken is " + timer + "  milliseconds");
        } else if (s.equals("showSec")) {
            answerArea.append("\nTime taken is " + timer / 1000 + " seconds");
        } else if (s.equals("showMin")) {
            answerArea.append("\nTime taken is " + timer / 60000 + " munites and "+ (timer % 60000) / 1000 + " seconds");
        }
    }


    //Compare generated hash with input hash
    public static boolean compare(String one, String two) {
        return (one.equals(two));
    }//GEN-LAST:event_buttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BruteForce_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BruteForce_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BruteForce_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BruteForce_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BruteForce_A().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextArea answerArea;
    private javax.swing.JButton button;
    private javax.swing.JTextField inputBox;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
